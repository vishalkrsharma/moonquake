/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState } from 'react';
import { useGLTF, useAnimations } from '@react-three/drei';

export default function Wave(props) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF('/wave.glb');
  const { actions } = useAnimations(animations, group);

  useEffect(() => {
    actions.wave.play();
  });

  //lattitude xy
  //longitude xz

  const [r, setR] = useState(1.98);
  const [theta, setTheta] = useState(Math.PI * 0);
  const [phi, setPhi] = useState(0);

  const [latitude, setlatitude] = useState(Math.PI / 2 - theta);
  const [longitude, setlongitude] = useState(phi);

  //green = z
  //orange=y
  //blue=x

  const [x, setX] = useState(r * Math.sin(latitude) * Math.sin(longitude));
  const [y, setY] = useState(r * Math.cos(latitude));
  const [z, setZ] = useState(r * Math.sin(latitude) * Math.cos(longitude));

  return (
    <group ref={group} {...props} dispose={null}>
      <group name='Scene' position={[x, y, z]} rotation={[Math.PI / 2, (Math.PI / 2) * 0, (Math.PI / 2) * 0]}>
        <mesh
          name='Icosphere'
          geometry={nodes.Icosphere.geometry}
          material={materials['Material.005']}
          morphTargetDictionary={nodes.Icosphere.morphTargetDictionary}
          morphTargetInfluences={nodes.Icosphere.morphTargetInfluences}
          scale={0.4}
        />
        {/* <pointLight position={[0, 1, 0]} intensity={50 / 100} angle={-0.3} /> */}
      </group>
    </group>
  );
}

useGLTF.preload('/wave.glb');
