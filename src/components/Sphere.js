/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useState } from 'react';
import { useGLTF } from '@react-three/drei';

export default function Sphere(props) {
  const { nodes } = useGLTF('/sphere.glb');

  //lattitude xy
  //longitude xz

  const [r, setR] = useState(2);
  const [theta, setTheta] = useState(Math.PI * 0);
  const [phi, setPhi] = useState(0.942478);

  const [latitude, setlatitude] = useState(Math.PI / 2 - theta);
  const [longitude, setlongitude] = useState(phi);

  //green = z
  //orange=y
  //blue=x

  const [x, setX] = useState(r * Math.sin(latitude) * Math.sin(longitude));
  const [y, setY] = useState(2 * Math.cos(latitude));
  const [z, setZ] = useState(2 * Math.sin(latitude) * Math.cos(longitude));

  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.Sphere.geometry} material={nodes.Sphere.material} scale={0.1} position={[x, y, z]} />
    </group>
  );
}

useGLTF.preload('/sphere.glb');
